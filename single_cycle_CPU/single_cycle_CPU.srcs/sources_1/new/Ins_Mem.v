`timescale 1ns / 1ps

module Ins_Mem(
    input [31:0] addr,
    input RW,
    output reg [31:0] dataOut
    );
    reg [7:0] rom [99:0];
    initial begin
        //$readmemb ("D:/vivado/single_cycle_CPU/rom_data.txt", rom);
        rom[0] = 8'b00000100;
        rom[1] = 8'b00000001;
        rom[2] = 8'b00000000;
        rom[3] = 8'b00001000;
        rom[4] = 8'b01000000;
        rom[5] = 8'b00000010;
        rom[6] = 8'b00000000;
        rom[7] = 8'b00000010;
        rom[8] = 8'b00000000;
        rom[9] = 8'b01000001;
        rom[10] = 8'b00011000;
        rom[11] = 8'b00000000;
        rom[12] = 8'b00001000;
        rom[13] = 8'b01100010;
        rom[14] = 8'b00101000;
        rom[15] = 8'b00000000;
        rom[16] = 8'b01000100;
        rom[17] = 8'b10100010;
        rom[18] = 8'b00100000;
        rom[19] = 8'b00000000;
        rom[20] = 8'b01001000;
        rom[21] = 8'b10000010;
        rom[22] = 8'b01000000;
        rom[23] = 8'b00000000;
        rom[24] = 8'b01100000;
        rom[25] = 8'b00001000;
        rom[26] = 8'b01000000;
        rom[27] = 8'b01000000;
        rom[28] = 8'b11000101;
        rom[29] = 8'b00000001;
        rom[30] = 8'b11111111;
        rom[31] = 8'b11111110;
        rom[32] = 8'b01110000;
        rom[33] = 8'b01000001;
        rom[34] = 8'b00110000;
        rom[35] = 8'b00000000;
        rom[36] = 8'b01110000;
        rom[37] = 8'b11000000;
        rom[38] = 8'b00111000;
        rom[39] = 8'b00000000;
        rom[40] = 8'b00000100;
        rom[41] = 8'b11100111;
        rom[42] = 8'b00000000;
        rom[43] = 8'b00001000;
        rom[44] = 8'b11000000;
        rom[45] = 8'b11100001;
        rom[46] = 8'b11111111;
        rom[47] = 8'b11111110;
        rom[48] = 8'b10011000;
        rom[49] = 8'b00100010;
        rom[50] = 8'b00000000;
        rom[51] = 8'b00000100;
        rom[52] = 8'b10011100;
        rom[53] = 8'b00101001;
        rom[54] = 8'b00000000;
        rom[55] = 8'b00000100;
        rom[56] = 8'b11001001;
        rom[57] = 8'b00100000;
        rom[58] = 8'b00000000;
        rom[59] = 8'b00000001;
        rom[60] = 8'b11111100;
        rom[61] = 8'b00000000;
        rom[62] = 8'b00000000;
        rom[63] = 8'b00000000;
        rom[64] = 8'b00000100;
        rom[65] = 8'b00001001;
        rom[66] = 8'b11111111;
        rom[67] = 8'b11111111;
        rom[68] = 8'b11100000;
        rom[69] = 8'b00000000;
        rom[70] = 8'b00000000;
        rom[71] = 8'b00001110;
    end
    always @(addr) begin // 为0，读存储器。大端数据存储模式
            dataOut[31:24] = rom[addr];
            dataOut[23:16] = rom[addr+1];
            dataOut[15:8] = rom[addr+2];
            dataOut[7:0] = rom[addr+3];
    end
endmodule
